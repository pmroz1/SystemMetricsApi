name: CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_VERSION: '8.0.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --no-restore --verbosity normal

  publish-releases:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    strategy:
      matrix:
        runtime: [linux-x64, win-x64]
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Publish ${{ matrix.runtime }}
      run: |
        dotnet publish \
          --configuration Release \
          --runtime ${{ matrix.runtime }} \
          --self-contained true \
          --output ./publish/${{ matrix.runtime }} \
          -p:PublishSingleFile=true \
          -p:IncludeNativeLibrariesForSelfExtract=true
        
    - name: Create archive
      run: |
        cd publish/${{ matrix.runtime }}
        if [[ "${{ matrix.runtime }}" == *"win"* ]]; then
          zip -r ../../SystemMetricsApi-${{ matrix.runtime }}.zip *
        else
          tar -czf ../../SystemMetricsApi-${{ matrix.runtime }}.tar.gz *
        fi
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: SystemMetricsApi-${{ matrix.runtime }}
        path: SystemMetricsApi-${{ matrix.runtime }}.*

